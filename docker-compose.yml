services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=3
      - KAFKA_OPTS=-javaagent:/opt/prometheus/jmx_prometheus_javaagent-1.2.0.jar=7071:/opt/prometheus/kafka-2_0_0.yml
    volumes:
      - ./kafka-2_0_0.yml:/opt/prometheus/kafka-2_0_0.yml  # Bind the file
      - ./jmx_prometheus_javaagent-1.2.0.jar:/opt/prometheus/jmx_prometheus_javaagent-1.2.0.jar
    ports:
      - "9092:9092"
      - "9093:9093"
      - "7071:7071"   # JMX exporter metrics port for Prometheus
    networks:
      - kafka_network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus config file
    ports:
      - "9090:9090"  # Prometheus Web UI
    networks:
      - kafka_network
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge

volumes:
  grafana-storage:
    driver: local